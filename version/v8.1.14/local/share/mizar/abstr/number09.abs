:: Elementary Number Theory Problems. {P}art {IX}
::  by Artur Korni{\l}owicz
:: 
:: Received November 21, 2023
:: Copyright (c) 2023 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, NAT_1, RELAT_1, FUNCT_1, XXREAL_0, ARYTM_3, XCMPLX_0,
      CARD_1, INT_1, NEWTON, INT_2, ARYTM_1, SUBSET_1, XBOOLE_0, TARSKI,
      FINSET_1, ABIAN, EULER_1, MEMBERED, REAL_1, MOEBIUS1, ZFMISC_1, PEPIN,
      VALUED_0, CARD_3, FINSEQ_1, NUMBER02, ORDINAL1, PBOOLE, SQUARE_1,
      NUMBER07, NAT_LAT, GR_CY_3, NUMBER09, NUMBER08, EC_PF_2, NUMBER06,
      SETFAM_1;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, ENUMSET1, XTUPLE_0, SETFAM_1,
      ORDINAL1, NUMBERS, XCMPLX_0, RELAT_1, FUNCT_1, PBOOLE, FINSET_1,
      MEMBERED, VALUED_0, XREAL_0, INT_1, INT_2, NAT_1, XXREAL_0, XXREAL_2,
      SQUARE_1, FINSEQ_1, PEPIN, EC_PF_2, NEWTON, WSIERP_1, ABIAN, EULER_1,
      NAT_LAT, GR_CY_3, MOEBIUS1, NUMBER02, NUMBER06, NUMBER07, NUMBER08;
 constructors NAT_D, RELSET_1, ABIAN, EULER_1, PEPIN, XXREAL_2, NUMBER02,
      NAT_LAT, GR_CY_3, MOEBIUS1, NUMBER07, DOMAIN_1, EC_PF_2, NUMBER06,
      NUMBER08, WSIERP_1;
 registrations ORDINAL1, RELSET_1, FINSET_1, XCMPLX_0, XXREAL_0, XREAL_0,
      NAT_1, INT_1, MEMBERED, VALUED_0, CARD_1, NEWTON, NEWTON02, ABIAN, NAT_6,
      JORDAN1D, XXREAL_2, NEWTON01, FINSEQ_1, XBOOLE_0, NAT_3, NUMBER02,
      MOEBIUS1, VALUED_1, NAT_LAT, RAMSEY_1, SQUARE_1, NUMBER08;
 requirements REAL, NUMERALS, BOOLE, SUBSET, ARITHM;


begin

reserve X for set;
reserve a,b,c,k,m,n for Nat;
reserve i,j for Integer;
reserve r,s for Real;
reserve p,p1,p2,p3 for Prime;
reserve z for Complex;

theorem :: NUMBER09:1
  z|^11 = z*z*z*z*z*z*z*z*z*z*z;

theorem :: NUMBER09:2
  z|^12 = z*z*z*z*z*z*z*z*z*z*z*z;

theorem :: NUMBER09:3
  z|^13 = z*z*z*z*z*z*z*z*z*z*z*z*z;

theorem :: NUMBER09:4
  z|^14 = z*z*z*z*z*z*z*z*z*z*z*z*z*z;

theorem :: NUMBER09:5
  z|^15 = z*z*z*z*z*z*z*z*z*z*z*z*z*z*z;

theorem :: NUMBER09:6
  z|^16 = z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z;

theorem :: NUMBER09:7
  z|^17 = z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z;

theorem :: NUMBER09:8
  z|^18 = z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z;

theorem :: NUMBER09:9
  z|^19 = z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z;

theorem :: NUMBER09:10
  z|^20 = z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z*z;

theorem :: NUMBER09:11
  n >= 2 implies ex k being positive Nat st 2|^n-1 = 4*k-1;

begin :: Problem 62

definition
  let X be set;
  attr X is included_in_Seg means
:: NUMBER09:def 1
  ex k being Nat st X c= Seg k;
end;

registration
  cluster empty -> included_in_Seg for set;
end;

registration
  let n be non zero Nat;
  cluster {n} -> included_in_Seg;
end;

registration
  cluster non empty included_in_Seg for set;
end;

registration
  cluster included_in_Seg -> finite natural-membered for set;
end;

registration
  cluster with_non-empty_elements -> included_in_Seg
          for finite natural-membered set;
end;

registration let a,r be Nat;
  cluster ArProg (a,r) -> natural-valued;
end;

definition
  let i;
  func Coprimes(i) -> Subset of INT equals
:: NUMBER09:def 2
  { j where j is Integer: i,j are_coprime };
end;

theorem :: NUMBER09:12
  for X being included_in_Seg set st
  X c= SetPrimes & p divides Product Sgm X holds p in X;

theorem :: NUMBER09:13
  for a,b being Nat, m being non zero Nat holds
  a,b are_coprime implies
  Product Sgm {p where p is Prime: p divides m & p divides a},
  Product Sgm {q where q is Prime: q divides m & q divides b} are_coprime;

theorem :: NUMBER09:14
  for a,b being Nat, m being non zero Nat holds
  Product Sgm {p where p is Prime: p divides m & p divides a},
  Product Sgm
     {r where r is Prime: r divides m & not r divides a & not r divides b}
  are_coprime;

theorem :: NUMBER09:15
  for a,b being Nat, m being non zero Nat holds
  a,b are_coprime implies
  Product Sgm {q where q is Prime: q divides m & q divides b},
  Product Sgm
     {r where r is Prime: r divides m & not r divides a & not r divides b}
  are_coprime;

theorem :: NUMBER09:16
  for X being included_in_Seg set holds a in X implies a divides Product Sgm X;

:: Problem 62
theorem :: NUMBER09:17
  for a,m being non zero Nat holds
  a,b are_coprime implies rng ArProg(b,a) /\ Coprimes(m) is infinite;

begin :: Problem 91

definition
  let n be Complex;
  attr n is a_product_of_two_primes means
:: NUMBER09:def 3
  ex p1,p2 being Prime st n = p1*p2;
end;

notation
  let n be Complex;
  antonym n is not_a_product_of_two_primes for n is a_product_of_two_primes;
end;

registration
  cluster -> not_a_product_of_two_primes for Prime;
end;

registration
  let p1,p2;
  cluster p1*p2 -> a_product_of_two_primes;
end;

theorem :: NUMBER09:18
  a <> 1 & a <> n & a is non prime & a divides n implies
  n is not_a_product_of_two_primes;

theorem :: NUMBER09:19
  n is a_product_of_two_primes implies n >= 4;

theorem :: NUMBER09:20
  c is_a_product_of_two_different_primes implies c is a_product_of_two_primes;

registration
  let p1,p2,p3;
  cluster p1*p2*p3 -> not_a_product_of_two_primes;
end;

theorem :: NUMBER09:21
  n is a_product_of_two_primes implies
  for a,b st a <> 1 & b <> 1 & n = a*b holds a is prime & b is prime;

theorem :: NUMBER09:22
  2|^n-1 is prime & 2|^n+1 is prime implies n = 2;

registration
  let n be zero Nat;
  cluster Mersenne(n) -> zero;
end;

registration
  let n be non zero Nat;
  cluster Mersenne(n) -> odd;
end;

theorem :: NUMBER09:23
  for p,q being Prime st p is odd & q divides Mersenne(p)
  ex k being Nat st q = 2*k*p+1;

theorem :: NUMBER09:24
  Mersenne(17) is prime;

theorem :: NUMBER09:25
  Mersenne(19) is prime;

:: Problem 91 a
theorem :: NUMBER09:26
  {2|^n-1 where n is Nat: 2|^n-1 <= 10|^6 & 2|^n-1 is a_product_of_two_primes}
  = { 2|^4-1, 2|^9-1, 2|^11-1 };

definition
  let n;
  attr n is having_at_least_three_different_divisors means
:: NUMBER09:def 4
  ex q1,q2,q3 being Nat st q1,q2,q3 are_mutually_distinct &
  q1 > 1 & q2 > 1 & q3 > 1 & q1 divides n & q2 divides n & q3 divides n;
end;

registration
  cluster having_at_least_three_different_prime_divisors ->
          having_at_least_three_different_divisors for Nat;
end;

registration
  cluster having_at_least_three_different_prime_divisors
          -> not_a_product_of_two_primes for Nat;
end;

theorem :: NUMBER09:27
  n is having_at_least_three_different_prime_divisors
  implies not n is_a_product_of_two_different_primes;

:: Problem 91 b
theorem :: NUMBER09:28
  n is even & n > 4 implies 2|^n-1 is having_at_least_three_different_divisors;

begin

theorem :: NUMBER09:29
  Fermat m = Fermat n implies m = n;

theorem :: NUMBER09:30
  m < n implies Fermat m < Fermat n;

theorem :: NUMBER09:31
  m <= n implies Fermat m <= Fermat n;

theorem :: NUMBER09:32
  i,j are_congruent_mod j implies j divides i;

theorem :: NUMBER09:33
  i*n,n are_congruent_mod n;

theorem :: NUMBER09:34
  a divides m|^k + 1 implies a divides (a*n+m)|^k + 1;

theorem :: NUMBER09:35
  17 divides (34*k+2)|^(2|^2) + 1;

theorem :: NUMBER09:36
  17 divides (34*k+4)|^(2|^1) + 1;

theorem :: NUMBER09:37
  17 divides (34*k+6)|^(2|^3) + 1;

theorem :: NUMBER09:38
  17 divides (34*k+8)|^(2|^2) + 1;

theorem :: NUMBER09:39
  17 divides (34*k+10)|^(2|^3) + 1;

theorem :: NUMBER09:40
  17 divides (34*k+12)|^(2|^3) + 1;

theorem :: NUMBER09:41
  17 divides (34*k+14)|^(2|^3) + 1;

theorem :: NUMBER09:42
  17 divides (34*k+20)|^(2|^3) + 1;

theorem :: NUMBER09:43
  17 divides (34*k+22)|^(2|^3) + 1;

theorem :: NUMBER09:44
  17 divides (34*k+24)|^(2|^3) + 1;

theorem :: NUMBER09:45
  17 divides (34*k+26)|^(2|^2) + 1;

theorem :: NUMBER09:46
  17 divides (34*k+28)|^(2|^3) + 1;

theorem :: NUMBER09:47
  17 divides (34*k+30)|^(2|^1) + 1;

theorem :: NUMBER09:48
  17 divides (34*k+32)|^(2|^2) + 1;

:: Problem 125
theorem :: NUMBER09:49
  1 < a <= 100 implies
  ex n being positive Nat st n <= 6 & a|^(2|^n) + 1 is composite;

begin

:: Problem 143
theorem :: NUMBER09:50
  for D being Integer holds
  { [x,y,z] where x,y,z is positive Nat : x^2-D*y^2 = z^2 } is infinite;

begin :: Problem 146

theorem :: NUMBER09:51
  n^2 mod 8 = 0 or n^2 mod 8 = 1 or n^2 mod 8 = 4;

:: Problem 146
theorem :: NUMBER09:52
  for x,y,z being Nat holds x^2 - 2*y^2 + 8*z <> 3;

begin :: Problem 147

:: Problem 147
theorem :: NUMBER09:53
  { [x,y] where x,y is Nat: y^2-x*(x+1)*(x+2)*(x+3) = 1 }
  = { [x,y] where x,y is Nat: y = x^2+3*x+1 };

begin :: Problem 158

theorem :: NUMBER09:54
  for a,b,c,d being positive Real st a/b < 1 & c/d < 1 holds (a/b) * (c/d) < 1;

:: Problem 158 a
theorem :: NUMBER09:55
  for x,y,z,t being positive Nat holds x/y + y/z + z/t + t/x <> 1;

definition
  let n be Nat;
  func GreaterOrEqualsNumbers(n) -> Subset of NAT equals
:: NUMBER09:def 5
  NAT \ Segm n;
end;

registration
  let n;
  cluster GreaterOrEqualsNumbers(n) -> infinite;
end;

theorem :: NUMBER09:56
  k in GreaterOrEqualsNumbers(n) iff n <= k;

theorem :: NUMBER09:57
  n+k in GreaterOrEqualsNumbers(n);

theorem :: NUMBER09:58
  n in GreaterOrEqualsNumbers(n);

theorem :: NUMBER09:59
  k > 0 implies not n in GreaterOrEqualsNumbers(n+k);

registration
  let n;
  cluster -> n_or_greater for Element of GreaterOrEqualsNumbers(n);
end;

registration
  let n;
  cluster n_or_greater for Nat;
end;

theorem :: NUMBER09:60
  for k being n_or_greater Nat holds k in GreaterOrEqualsNumbers(n);

registration
  let n;
  let k be non zero Nat;
  cluster k*n -> n_or_greater;
end;

registration
  let n;
  let k be n_or_greater Nat;
  cluster k-n -> natural;
end;

:: Problem 158 b
theorem :: NUMBER09:61
  { [x,y,z,t] where x,y,z,t is Integer: x/y + y/z + z/t + t/x = 1 } is infinite
;

begin :: Problem 166

:: Problem 166
theorem :: NUMBER09:62
  1/2 = 1/2^2 + 1/3^2 + 1/4^2 + 1/6^2 + 1/7^2 + 1/9^2 + 1/12^2 + 1/14^2 +
        1/21^2 + 1/36^2 + 1/45^2 + 1/60^2;

begin :: Problem 178

:: Problem 178
theorem :: NUMBER09:63
  (n+1)|^3 + (n+2)|^3 + (n+3)|^3 + (n+4)|^3 <> (n+5)|^3;

begin :: Problem 180

:: Problem 180
theorem :: NUMBER09:64
  2*(2+1) = 1*(1+1)*(1+2) & 14*(14+1) = 5*(5+1)*(5+2);

begin :: Problem 181

:: Problem 181
theorem :: NUMBER09:65
  { [x,y,z] where x,y,z is positive Nat : 1+x^2+y^2 = z^2 } is infinite;
  
