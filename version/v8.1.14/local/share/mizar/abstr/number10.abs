:: Elementary Number Theory Problems. {P}art {X}
::  by Artur Korni{\l}owicz
:: 
:: Received November 21, 2023
:: Copyright (c) 2023 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, NAT_1, RELAT_1, FUNCT_1, XXREAL_0, ARYTM_3, XCMPLX_0,
      CARD_1, INT_1, NEWTON, INT_2, ARYTM_1, SUBSET_1, XBOOLE_0, TARSKI,
      FINSET_1, ABIAN, EULER_1, REAL_1, ZFMISC_1, PEPIN, VALUED_0, CARD_3,
      FINSEQ_1, NUMBER02, ORDINAL1, PBOOLE, SQUARE_1, NUMBER07, ORDINAL4,
      PARTFUN3, COMPLEX1, MCART_1, POWER, NUMBER08, NUMBER10, FUNCT_3,
      SETFAM_1, FINSEQ_2, FUNCT_7, NUMPOLY1;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, ENUMSET1, XTUPLE_0, SETFAM_1,
      DOMAIN_1, ORDINAL1, CARD_1, NUMBERS, XCMPLX_0, RELAT_1, FUNCT_1,
      RELSET_1, FUNCT_2, PBOOLE, FINSET_1, VALUED_0, XREAL_0, INT_1, INT_2,
      NAT_1, NAT_D, XXREAL_0, XXREAL_2, COMPLEX1, SQUARE_1, FINSEQ_1, QUIN_1,
      PARTFUN3, PEPIN, FINSEQ_2, RVSUM_1, NEWTON, POWER, ABIAN, EULER_1,
      NUMPOLY1, NUMBER02, NUMBER07, NUMBER08;
 constructors NAT_D, RELSET_1, ABIAN, EULER_1, PEPIN, XXREAL_2, NUMBER02,
      QUIN_1, MOEBIUS1, WELLORD2, NUMBER07, PARTFUN3, POWER, DOMAIN_1, EC_PF_2,
      WSIERP_1, NUMPOLY1, NUMBER08, NUMBER09;
 registrations ORDINAL1, RELSET_1, FINSET_1, NUMBERS, XCMPLX_0, XXREAL_0,
      XREAL_0, NAT_1, INT_1, MEMBERED, VALUED_0, CARD_1, NEWTON, NEWTON02,
      NEWTON03, ABIAN, NAT_6, WSIERP_1, XXREAL_2, FINSEQ_1, RVSUM_1, FUNCT_1,
      XBOOLE_0, NUMBER02, PARTFUN3, FINSEQ_9, XTUPLE_0, SQUARE_1, POWER,
      NUMPOLY1, NUMBER08, NUMBER09, NEWTON04;
 requirements REAL, NUMERALS, BOOLE, SUBSET, ARITHM;


begin

reserve a,b,c,k,m,n for Nat;
reserve i,j,x,y for Integer;
reserve p,q for Prime;
reserve r,s for Real;

theorem :: NUMBER10:1
  for i,j being natural Number holds
  i < j implies ex k being positive Nat st j = i + k;

theorem :: NUMBER10:2
  for f being positive-yielding integer-valued FinSequence holds Product f >= 1
;

theorem :: NUMBER10:3
  m >= 2 & n >= 2 implies m*n is composite;

theorem :: NUMBER10:4
  not p divides n implies n,p are_coprime;

theorem :: NUMBER10:5
  -1 mod p = p-1;

begin :: Problem 84

definition
  let r,s be Complex;
  pred r,s are_twin means
:: NUMBER10:def 1
  |.s-r.| = 2;
  irreflexivity;
  symmetry;
end;

notation
  let r,s be Complex;
  antonym r,s are_not_twin for r,s are_twin;
end;

theorem :: NUMBER10:6
  r <= s implies (r,s are_twin iff s-r = 2);

definition
  let n;
  func <=6n+1(n) -> Subset of NAT equals
:: NUMBER10:def 2
  { a where a is Nat: a <= 6*n+1 };
end;

theorem :: NUMBER10:7
  a <= 6*n+1 iff a in <=6n+1(n);

theorem :: NUMBER10:8
  <=6n+1(n) c= Segm(6*n+2);

registration
  let n;
  cluster <=6n+1(n) -> non empty finite;
end;

theorem :: NUMBER10:9
  m <= n implies <=6n+1(m) c= <=6n+1(n);

theorem :: NUMBER10:10
  m < n implies <=6n+1(m) c< <=6n+1(n);

theorem :: NUMBER10:11
  <=6n+1(m) = <=6n+1(n) implies m = n;

theorem :: NUMBER10:12
  for n being non zero Nat holds 2 in <=6n+1(n) /\ SetPrimes;

theorem :: NUMBER10:13
  for n being non zero Nat holds 3 in <=6n+1(n) /\ SetPrimes;

theorem :: NUMBER10:14
  for n being non zero Nat holds 5 in <=6n+1(n) /\ SetPrimes;

theorem :: NUMBER10:15
  for n being non zero Nat holds 7 in <=6n+1(n) /\ SetPrimes;

registration
  let n be non zero Nat;
  cluster <=6n+1(n) /\ SetPrimes -> non empty;
end;

definition :: largest prime
  let n be non zero Nat;
  func LP<=6n+1(n) -> Prime equals
:: NUMBER10:def 3
  max ( <=6n+1(n) /\ SetPrimes );
end;

theorem :: NUMBER10:16
  for m,n being non zero Nat st m <= n holds LP<=6n+1(m) <= LP<=6n+1(n);

theorem :: NUMBER10:17
  LP<=6n+1(20) = LP<=6n+1(19);

theorem :: NUMBER10:18
  <=6n+1(1) = {0,1,2,3,4,5,6,7};

theorem :: NUMBER10:19
  LP<=6n+1(1) = 7;

theorem :: NUMBER10:20
  primenumber m = primenumber n implies m = n;

definition
  let p be Nat such that
 p is prime;
  func primeindex(p) -> Element of NAT means
:: NUMBER10:def 4
  primenumber it = p;
end;

theorem :: NUMBER10:21
  primeindex p = primeindex q implies p = q;

theorem :: NUMBER10:22
  primeindex(2) = 0;

theorem :: NUMBER10:23
  primeindex(3) = 1;

theorem :: NUMBER10:24
  primeindex(5) = 2;

theorem :: NUMBER10:25
  primeindex(7) = 3;

theorem :: NUMBER10:26
  primeindex(11) = 4;

theorem :: NUMBER10:27
  primeindex(13) = 5;

theorem :: NUMBER10:28
  n > 0 implies p < primenumber(n+primeindex p);

theorem :: NUMBER10:29
  for n being non zero Nat holds
  primenumber (1 + primeindex LP<=6n+1(n)) >= 6*n+5;

theorem :: NUMBER10:30
  for n being non zero Nat holds
  (primenumber (1 + primeindex LP<=6n+1(n))) - LP<=6n+1(n) >= 4;

theorem :: NUMBER10:31
  for n being non zero Nat holds
  LP<=6n+1(n), primenumber (1+primeindex LP<=6n+1(n)) are_not_twin;

theorem :: NUMBER10:32
  for m being non zero Nat st 6*m+1 is prime holds 6*m+1 = LP<=6n+1(m);

theorem :: NUMBER10:33
  for m,n being non zero Nat holds
  6*n+1 is prime & m < n implies LP<=6n+1(m) < LP<=6n+1(n);

theorem :: NUMBER10:34
  for m,n being non zero Nat st 6*m+1 is prime & 6*n+1 is prime &
  LP<=6n+1(m) = LP<=6n+1(n) holds m = n;

definition
  func 6n+1_Primes -> Subset of NAT equals
:: NUMBER10:def 5
  { 6*n+1 where n is Nat: 6*n+1 is prime };
end;

registration
  cluster 6n+1_Primes -> with_non-empty_elements;
end;

theorem :: NUMBER10:35
  6n+1_Primes c= SetPrimes;

registration
  cluster 6n+1_Primes -> infinite;
end;

:: Problem 84
theorem :: NUMBER10:36
  { [p,q] where p,q is Prime: p,q are_not_twin } is infinite;

begin :: Problem 94

definition
  let c be Complex;
  attr c is a_product_of_three_different_primes means
:: NUMBER10:def 6
  ex p,q,r being Prime st p,q,r are_mutually_distinct & c = p*q*r;
end;

theorem :: NUMBER10:37
  n > 4 implies ex k being Nat st n = 2*k & k > 2 or n = 2*k+1 & k > 1;

:: Problem 94 a
theorem :: NUMBER10:38
  n > 4 implies
  ex m being Nat st n < m < 2*n & m is_a_product_of_two_different_primes;

:: Problem 94 b
theorem :: NUMBER10:39
  n > 15 implies
  ex m being Nat st n < m < 2*n & m is a_product_of_three_different_primes;

begin :: Problem 99

theorem :: NUMBER10:40
  5 divides 2|^(4*n+2) + 1;

registration
  let n;
  cluster 1/5 * (2|^(4*n+2)+1) -> natural;
end;

:: Problem 99
theorem :: NUMBER10:41
  n > 1 implies 1/5 * (2|^(4*n+2)+1) is composite;

begin

:: Problem 170
theorem :: NUMBER10:42
  { [x,y,z] where x,y,z is Integer: x+y+z = 3 & x|^3+y|^3+z|^3 = 3 }
  = { [1,1,1], [-5,4,4], [4,-5,4], [4,4,-5] };

begin :: Problem 173

:: Problem 173
theorem :: NUMBER10:43
  for m,n being positive Nat ex a,b,c being Integer st
  { [x,y] where x,y is Nat: a*x + b*y = c } = { [m,n] };

begin :: Problem 174

theorem :: NUMBER10:44
  for m being positive Nat holds
  card { [x,y] where x,y is positive Nat: x+y = m+1 } = m;

:: Problem 174
theorem :: NUMBER10:45
  for m being positive Nat ex a,b,c being positive Nat st
  card { [x,y] where x,y is positive Nat: a*x + b*y = c } = m;

begin :: Problem 175

:: Problem 175
theorem :: NUMBER10:46
  for m being positive Nat holds
  card { [x,y] where x,y is positive Nat: x^2+y^2+2*x*y-m*x-m*y-m-1 = 0 } = m;

begin :: Problem 177

definition
  let b,e be Real;
  let n be Nat;
  func powersFS(b,e,n) -> FinSequence of REAL means
:: NUMBER10:def 7
  len it = n &
  for i being Nat st 1 <= i <= n holds it.i = (b+i) to_power e;
end;

theorem :: NUMBER10:47
  powersFS(-(k+1),r,2*(k+1)) =
  <* (-k) to_power r *> ^ powersFS(-k,r,2*k) ^ <* (k+1) to_power r *>;

theorem :: NUMBER10:48
  for k being positive Nat holds
  powersFS(-(k+1),r,2*(k+1)-1) =
  <* (-k) to_power r *> ^ powersFS(-k,r,2*k-1) ^ <* k to_power r *>;

theorem :: NUMBER10:49
  Sum powersFS(-k,3,2*k) = k|^3;

theorem :: NUMBER10:50
  for k being positive Nat holds Sum powersFS(-k,3,2*k-1) = 0;

:: Problem 177
theorem :: NUMBER10:51
  for n being positive Nat
  ex x being Integer, y being Nat st Sum powersFS(x,3,n) = y|^3;

begin :: Problem 179

:: Problem 179
theorem :: NUMBER10:52
  for x being Real holds
  (x+1)|^3 + (x+2)|^3 + (x+3)|^3 + (x+4)|^3 = (x+10)|^3 iff x = 10;

begin :: Problem 186

:: Problem 186
theorem :: NUMBER10:53
  { [x,y] where x,y is positive Nat: 2|^x + 1 = y^2 } = { [3,3] };

begin :: Problem 187

:: Problem 187
theorem :: NUMBER10:54
  { [x,y] where x,y is positive Nat: 2|^x - 1 = y^2 } = { [1,1] };

begin :: Problem 189

theorem :: NUMBER10:55
  { [x,y] where x,y is positive Nat: (2*x+1)^2 - 2*y^2 + 1 = 0 } is infinite;

:: Problem 189
theorem :: NUMBER10:56
  { [x,y] where x,y is positive Nat: x^2 + (x+1)^2 = y^2 } is infinite;

begin :: Problem 190

theorem :: NUMBER10:57
  { [x,y] where x,y is positive Nat: 3*x^2 + 3*x - y^2 + 1 = 0 } is infinite;

:: Problem 190
theorem :: NUMBER10:58
  { [x,y] where x,y is positive Nat: (x+1)|^3 - x|^3 = y^2 } is infinite;

begin

theorem :: NUMBER10:59
  i is even implies i^2 mod 8 = 0 or i^2 mod 8 = 4;

theorem :: NUMBER10:60
  i is odd implies i^2 mod 8 = 1;

theorem :: NUMBER10:61
  i^2 mod 8 = 0 or i^2 mod 8 = 1 or i^2 mod 8 = 4;

theorem :: NUMBER10:62
  p = 4*k+3 & p divides i^2+j^2 implies p divides i & p divides j;

:: Problem 193
theorem :: NUMBER10:63
  x|^2 - y|^3 <> 7;

begin

:: Problem 194
theorem :: NUMBER10:64
  for c being odd Nat holds x|^2 - y|^3 <> (2*c)|^3 - 1;

begin :: Problem 197

registration
  let f,g be positive-yielding FinSequence;
  cluster f^g -> positive-yielding;
end;

registration
  let x be positive Real;
  cluster <*x*> -> positive-yielding;
end;

registration
  let x,y be positive Real;
  cluster <*x,y*> -> positive-yielding;
end;

:: Problem 197
theorem :: NUMBER10:65
  n > 0 implies
  ex f being positive-yielding FinSequence of NAT st
  len f = n & Sum f = Product f;

begin :: Problem 199

theorem :: NUMBER10:66
  for x,y being positive Nat st y*(3*y-1) = x*(x+1)
  holds Polygon(3,x) = Polygon(5,y);

theorem :: NUMBER10:67
  for m,n being positive Nat, s being natural Number
  st Polygon(s,m) = Polygon(s,n) & s >= 2 holds m = n;

theorem :: NUMBER10:68
  { [x,y] where x,y is positive Nat: y*(3*y-1) - x*(x+1) = 0 } is infinite;

:: Problem 199
theorem :: NUMBER10:69
  { n where n is 3-gonal Nat: n is 5-gonal } is infinite;
